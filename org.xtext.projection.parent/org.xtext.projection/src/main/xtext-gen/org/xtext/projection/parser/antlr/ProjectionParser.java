/*
 * generated by Xtext 2.15.0
 */
package org.xtext.projection.parser.antlr;

import com.google.inject.Inject;
import org.eclipse.xtext.parser.antlr.AbstractAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.xtext.projection.parser.antlr.internal.InternalProjectionParser;
import org.xtext.projection.services.ProjectionGrammarAccess;

public class ProjectionParser extends AbstractAntlrParser {

	@Inject
	private ProjectionGrammarAccess grammarAccess;

	@Override
	protected void setInitialHiddenTokens(XtextTokenStream tokenStream) {
		tokenStream.setInitialHiddenTokens("RULE_LINE_COMMENT", "RULE_LINE_COMMENT2", "RULE_ALERT_LINE_COMMENT", "RULE_QUESTION_LINE_COMMENT", "RULE_GOOD_LINE_COMMENT", "RULE_REGION_COMMENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	

	@Override
	protected InternalProjectionParser createParser(XtextTokenStream stream) {
		return new InternalProjectionParser(stream, getGrammarAccess());
	}

	@Override 
	protected String getDefaultRuleName() {
		return "Model";
	}

	public ProjectionGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ProjectionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
